pipeline {
    agent any
    stages {
        stage('front end Testing') {
            steps {
                dir('budget-tracker/client') {
                    sh 'npm install && npm run test'
                }
            }
        }
        stage('Build and Push front end Docker Image to Github Registry ') {
            environment {
                registry = '${GIT_REPO}'+'client-service'
                dockerImage = ''
            }
            steps {
                dir('budget-tracker/client') {
                    script {
                        dockerImage = docker.build registry + ":$BUILD_NUMBER"
                    }
                    sh 'echo ${GH_TOKEN} | docker login docker.pkg.github.com -u narenraj701 --password-stdin'
                    sh 'docker push ' + registry + ":$BUILD_NUMBER"
                }
            }
        }
        stage('Build user-service') {
            steps {
                dir('budget-tracker/services/user-service') {
                    sh 'mvn -B -DskipTests clean package'
                }
            }
        }
        stage('Test user-service') {
            steps {
                dir('budget-tracker/services/user-service') {
                    sh 'mvn test'
                }
            }
        }
        stage('Building and Push user-service Docker Image to Github Registry') {
            environment {
                registry = '${GIT_REPO}'+'user-service'
                dockerImage = ''
            }
            steps {
                dir('budget-tracker/services/user-service') {
                    script {
                        dockerImage = docker.build registry + ":$BUILD_NUMBER"
                    }
                    sh 'echo ${GH_TOKEN} | docker login docker.pkg.github.com -u narenraj701 --password-stdin'
                    sh 'docker push ' + registry + ":$BUILD_NUMBER"
                }
            }
        }
        stage('Build budget-service') {
            steps {
                    dir('budget-tracker/services/budget-service') {
                    sh 'mvn -B -DskipTests clean package'
                    }
            }
        }
        stage('Test budget-service') {
            steps {
                dir('budget-tracker/services/budget-service') {
                    sh 'mvn test'
                }
            }
        }
        stage('Building and Push budget-service Docker Image to Github Registry') {
                environment {
                    registry = '${GIT_REPO}'+'budget-service'
                    dockerImage = ''
                }
                steps {
                    dir('budget-tracker/services/budget-service') {
                    script {
                        dockerImage = docker.build registry + ":$BUILD_NUMBER"
                    }
                    sh 'echo ${GH_TOKEN} | docker login docker.pkg.github.com -u narenraj701 --password-stdin'
                    sh 'docker push ' + registry + ":$BUILD_NUMBER"
                    }
                }
        }
        stage('Build transaction-service') {
            steps {
                dir('budget-tracker/services/transaction-service') {
                    sh 'mvn -B -DskipTests clean package'
                }
            }
        }
        stage('Test transaction-service') {
            steps {
                dir('budget-tracker/services/transaction-service') {
                    sh 'mvn test'
                }
            }
        }
        stage('Building and Push Transaction-service Docker Image to Github Registry') {
            environment {
                registry = '${GIT_REPO}'+'transaction-service'
                dockerImage = ''
            }
                steps {
                dir('budget-tracker/services/transaction-service') {
                    script {
                        dockerImage = docker.build registry + ":$BUILD_NUMBER"
                    }
                    sh 'echo ${GH_TOKEN} | docker login docker.pkg.github.com -u narenraj701 --password-stdin'
                    sh 'docker push ' + registry + ":$BUILD_NUMBER"
                }
                }
        }
    }
}
